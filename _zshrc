##### auto_cd
setopt AUTO_CD

##### vcs
autoload -Uz vcs_info

setopt prompt_subst

zstyle ':vcs_info:*' check-for-changes true
zstyle ':vcs_info:*' stagedstr '!'
zstyle ':vcs_info:*' unstagedstr '*'
zstyle ':vcs_info:*' actionformats \
    '%F{magenta}(%f%s%F{magenta})%F{yellow}-%F{magenta}[%F{green}%b%F{yellow}|%F{red}%a%F{magenta}]%f '
zstyle ':vcs_info:*' formats       \
    '%F{magenta}[%F{green}%b%F{magenta}]%F{yellow}%c%u%f '
zstyle ':vcs_info:(sv[nk]|bzr):*' branchformat '%b%F{red}:%F{yellow}%r'
precmd () { vcs_info }
PS1='%F{magenta}[%F{green}%n%F{magenta}] %F{yellow}%3~ ${vcs_info_msg_0_}%f%# '

##### binding key
bindkey -e

##### alias
alias be='bundle exec'
alias ll='ls -l'
alias vi='vim'

##### path
path=(/usr/local/Cellar/neo4j/2.3.2/libexec/bin/ $path)

##### other
tabs -4

##### GnuPG
envfile="$HOME/.gnupg/gpg-agent.env"
if [[ -e "$envfile" ]] && kill -0 $(grep GPG_AGENT_INFO "$envfile" | cut -d: -f 2) 2>/dev/null; then
  eval "$(cat "$envfile")"
else
  eval "$(gpg-agent --daemon --enable-ssh-support --write-env-file "$envfile")"
fi
export GPG_AGENT_INFO  # the env file does not contain the export statement
export SSH_AUTH_SOCK   # enable gpg-agent for ssh

##### Env
export GPG_TTY=`tty`

export PATH="$HOME/.anyenv/bin:$PATH"
eval "$(anyenv init -)"
